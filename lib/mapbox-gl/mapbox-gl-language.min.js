/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/@mapbox/mapbox-gl-language@1.0.1/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function MapboxLanguage(e){if(e=Object.assign({},e),!(this instanceof MapboxLanguage))throw new Error("MapboxLanguage needs to be called with the new keyword");this.setLanguage=this.setLanguage.bind(this),this._initialStyleUpdate=this._initialStyleUpdate.bind(this),this._defaultLanguage=e.defaultLanguage,this._isLanguageField=e.languageField||/^name_/,this._getLanguageField=e.getLanguageField||function(e){return"mul"===e?"name":`name_${e}`},this._languageSource=e.languageSource||null,this._languageTransform=e.languageTransform,this._excludedLayerIds=e.excludedLayerIds||[],this.supportedLanguages=e.supportedLanguages||["ar","de","en","es","fr","it","ja","ko","mul","pt","ru","vi","zh-Hans","zh-Hant"]}const isTokenField=/^\{name/;function isFlatExpressionField(e,t){const a=Array.isArray(t)&&"get"===t[0];return a&&isTokenField.test(t[1])&&console.warn("This plugin no longer supports the use of token syntax (e.g. {name}). Please use a get expression. See https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/ for more details."),a&&e.test(t[1])}function adaptNestedExpressionField(e,t,a){if(Array.isArray(t))for(let n=1;n<t.length;n++)Array.isArray(t[n])&&(isFlatExpressionField(e,t[n])&&(t[n][1]=a),adaptNestedExpressionField(e,t[n],a))}function adaptPropertyLanguage(e,t,a){if(isFlatExpressionField(e,t)&&(t[1]=a),adaptNestedExpressionField(e,t,a),"get"===t[0]&&"name"===t[1]){const e=t.slice();t=["coalesce",["get",a],e]}return t}function changeLayerTextProperty(e,t,a,n){return t.layout&&t.layout["text-field"]&&-1===n.indexOf(t.id)?Object.assign({},t,{layout:Object.assign({},t.layout,{"text-field":adaptPropertyLanguage(e,t.layout["text-field"],a)})}):t}function findStreetsSource(e){const t=Object.keys(e.sources).filter((t=>{const a=e.sources[t].url;return a&&a.indexOf("mapbox.mapbox-streets-v8")>-1||/mapbox-streets-v[1-9][1-9]/.test(a)}));if(!t.length)throw new Error('If using MapboxLanguage with a Mapbox style, the style must be based on vector tile version 8, e.g. "streets-v11"');return t[0]}function browserLanguage(e){const t=navigator.languages?navigator.languages[0]:navigator.language||navigator.userLanguage,a=t&&t.split("-");let n=t;return a.length>1&&(n=a[0]),e.indexOf(n)>-1?n:null}MapboxLanguage.prototype.setLanguage=function(e,t){if(this.supportedLanguages.indexOf(t)<0)throw new Error(`Language ${t} is not supported`);const a=this._languageSource||findStreetsSource(e);if(!a)return e;const n=this._getLanguageField(t),s=this._isLanguageField,i=this._excludedLayerIds,o=e.layers.map((e=>e.source===a?changeLayerTextProperty(s,e,n,i):e)),r=Object.assign({},e,{layers:o});return this._languageTransform?this._languageTransform(r,t):r},MapboxLanguage.prototype._initialStyleUpdate=function(){const e=this._map.getStyle(),t=this._defaultLanguage||browserLanguage(this.supportedLanguages);this._map.setStyle(this.setLanguage(e,t))},MapboxLanguage.prototype.onAdd=function(e){return this._map=e,this._map.on("style.load",this._initialStyleUpdate),this._container=document.createElement("div"),this._container},MapboxLanguage.prototype.onRemove=function(){this._map.off("style.load",this._initialStyleUpdate),this._map=void 0},"undefined"!=typeof module&&void 0!==module.exports?module.exports=MapboxLanguage:window.MapboxLanguage=MapboxLanguage;
//# sourceMappingURL=/sm/ed2d1f826390bc263aebe008f54c1437799f243eeeb2badb6de9f1e2a60ce278.map