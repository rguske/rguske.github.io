<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Cloud Native - Tag - Robert Guske</title>
        <link>https://rguske.github.io/tags/cloud-native/</link>
        <description>Cloud Native - Tag - Robert Guske</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>robert.guske@gmail.com (Robert Guske)</managingEditor>
            <webMaster>robert.guske@gmail.com (Robert Guske)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License. Â© All rights reserved -2018</copyright><lastBuildDate>Mon, 04 Jul 2022 12:00:54 &#43;0200</lastBuildDate><atom:link href="https://rguske.github.io/tags/cloud-native/" rel="self" type="application/rss+xml" /><item>
    <title>Event-Driven Automation with Project Harbor and Knative</title>
    <link>https://rguske.github.io/post/event-driven-automation-with-project-harbor-and-knative/</link>
    <pubDate>Mon, 04 Jul 2022 12:00:54 &#43;0200</pubDate>
    <author>Robert Guske</author>
    <guid>https://rguske.github.io/post/event-driven-automation-with-project-harbor-and-knative/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/harbor-webhook-function-cover.png" referrerpolicy="no-referrer">
            </div>The open-source container registry Harbor supports the configuration of webhook endpoints. Harbor notifies the webhook endpoint of certain events that occur in a project. However, the event sent is not delivered as a CloudEvent. By leveraging the power of VEBA/Knative the non-CloudEvent can be send to a webhook function to get transformed in a CloudEvent. By transforming the event, other functions can be subscribed to the new event to ultimately get triggered. As a use case for it, I'm going to describe how ChatOps can be enabled using event-driven automation.]]></description>
</item>
<item>
    <title>Deploy VMware Tanzu Packages from a private Container Registry</title>
    <link>https://rguske.github.io/post/deploy-tanzu-packages-from-a-private-registry/</link>
    <pubDate>Wed, 09 Feb 2022 12:00:40 &#43;0100</pubDate>
    <author>Robert Guske</author>
    <guid>https://rguske.github.io/post/deploy-tanzu-packages-from-a-private-registry/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/img/tanzu_packages_offline_cover.png" referrerpolicy="no-referrer">
            </div>Offline Requirements During a recent Tanzu engagement, my customer wanted to make use of the VMware Tanzu Packages to extend the core functionalities of their existing Kubernetes clusters. As a requirement, an offline deployment of the Packages was raised, which in other words means, deployments from their own private container registry. The intention behind it is simple.
All of the Tanzu Packages shown in Table I below are provided by VMware.]]></description>
</item>
</channel>
</rss>
